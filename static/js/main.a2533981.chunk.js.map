{"version":3,"sources":["components/ToDoArray.jsx","components/ToDoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDoArray","props","className","Tooltip","title","Button","onClick","onSelect","id","text","ToDoList","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","arrElem","index","type","placeholder","value","onChange","event","target","map","itemval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAgCeA,EA3BG,SAACC,GACjB,OACE,mCACE,sBAAKC,UAAU,aAAf,UAQE,cAACC,EAAA,EAAD,CAASC,MAAM,cAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACPL,EAAMM,SAASN,EAAMO,KAEvBN,UAAU,UAJZ,SAME,cAAC,IAAD,QAGJ,mCAAMD,EAAMQ,KAAZ,aC4COC,G,MA/DE,WACf,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaMC,EAAc,SAACR,GACnBS,QAAQC,IAAI,WAEZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUd,SAIvB,OACE,mCACE,qBAAKN,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,4CACA,uBAEA,uBACEqB,KAAK,OACLC,YAAY,YACZC,MAAOb,EACPc,SAhCQ,SAACC,GACjBd,EAAac,EAAMC,OAAOH,UAiCpB,cAACtB,EAAA,EAAD,CAASC,MAAM,YAAf,SACE,cAACC,EAAA,EAAD,CAAQC,QA/BE,WAClBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBP,OAEvBC,EAAa,KA2ByBX,UAAU,YAAxC,SACE,cAAC,IAAD,QAIJ,6BAEGY,EAAMe,KAAI,SAACC,EAASR,GACnB,OACE,cAAC,EAAD,CAEEd,GAAIc,EACJb,KAAMqB,EACNvB,SAAUS,GAHLM,iBC7CRS,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2533981.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverTwoTone\";\r\nimport { Button, Tooltip } from \"@material-ui/core/\";\r\n// import { Tooltip } from \"@material-ui/core\";\r\n\r\nconst ToDoArray = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"todo_style\">\r\n        {/* <i\r\n          className=\"fa fa-times\"\r\n          aria-hidden=\"true\"\r\n          onClick={() => {\r\n            props.onSelect(props.id);\r\n          }}\r\n        /> */}\r\n        <Tooltip title=\"Delete Item\">\r\n          <Button\r\n            onClick={() => {\r\n              props.onSelect(props.id);\r\n            }}\r\n            className=\"btn_red\"\r\n          >\r\n            <DeleteIcon />\r\n          </Button>\r\n        </Tooltip>\r\n        <li> {props.text} </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoArray;\r\n","import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ToDoArray from \"./ToDoArray\";\r\nimport \"../assets/todoList.css\";\r\n\r\nconst ToDoList = () => {\r\n  const [inputList, setInputList] = useState(\"\");\r\n  const [Items, setItems] = useState([]);\r\n\r\n  const eventItem = (event) => {\r\n    setInputList(event.target.value);\r\n  };\r\n\r\n  const listOfItems = () => {\r\n    setItems((oldItems) => {\r\n      return [...oldItems, inputList];\r\n    });\r\n    setInputList(\"\");\r\n  };\r\n\r\n  const deleteItems = (id) => {\r\n    console.log(\"deleted\");\r\n\r\n    setItems((oldItems) => {\r\n      return oldItems.filter((arrElem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main_div\">\r\n        <div className=\"center_div\">\r\n          <br />\r\n          <h1> ToDo List</h1>\r\n          <br />\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add Items\"\r\n            value={inputList}\r\n            onChange={eventItem}\r\n          />\r\n          <Tooltip title=\"Add Items\">\r\n            <Button onClick={listOfItems} className=\"btn_green\">\r\n              <AddIcon />\r\n            </Button>\r\n          </Tooltip>\r\n\r\n          <ol>\r\n            {/* <li>{inputList}</li> */}\r\n            {Items.map((itemval, index) => {\r\n              return (\r\n                <ToDoArray\r\n                  key={index}\r\n                  id={index}\r\n                  text={itemval}\r\n                  onSelect={deleteItems}\r\n                />\r\n              );\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <>\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}